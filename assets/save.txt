// $.getJSON("assets/SlaveRevolts.geojson", function(data){
  
  let fourLayer = L.geoJson($.getJSON("assets/SlaveRevolts.geojson"), {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1400");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });

 let fiveLayer = L.geoJson("assets/SlaveRevolts.geojson", {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1500");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });

  let sixLayer = L.geoJson("assets/SlaveRevolts.geojson", {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1600");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });

  let sevenLayer = L.geoJson("assets/SlaveRevolts.geojson", {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1700");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });

  let eightLayer = L.geoJson("assets/SlaveRevolts.geojson", {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1800");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });

  let nineLayer = L.geoJson("assets/SlaveRevolts.geojson", {

  filter: function(feature, layer) {
    return (feature.properties["Century"] === "1900");},

  pointToLayer: function(feature, latlng) {
      return new L.CircleMarker(latlng, {
        radius:8,
        color: getColor(feature),
      });
    },
    onEachFeature: PointActions
    
  });



let map = L.map('map', {
  layers: [wphys, wtopo, fourLayer, fiveLayer, sixLayer, sevenLayer, eightLayer, nineLayer]
});

// let revoltsites = L.layerGroup([fourLayer, fiveLayer, sixLayer, sevenLayer, eightLayer, nineLayer);

map.setView([16.23866202852162, -2.362826680216191], 3);

let baseMaps = {
    "Physical": wphys,
    "Boundaries/Places": wtopo
};

let overlayMaps = {
    "1400s": fourLayer,
    "1500s": fiveLayer,
    "1600s": sixLayer,
    "1700s": sevenLayer,
    "1800s": eightLayer,
    "1900+": nineLayer
};

let layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);